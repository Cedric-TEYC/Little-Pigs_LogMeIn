name: Full DevSecOps CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

env:
  DOCKER_BUILDKIT: 1

jobs:
  security:
    name: üõ°Ô∏è Security & Quality (Trivy, Bandit, Flake8)
    runs-on: ubuntu-latest
    outputs:
      summary: ${{ steps.summary.outputs.summary }}
    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üß™ Trivy filesystem scan (code, deps, secrets)
        id: trivy-fs
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: table
          severity: CRITICAL,HIGH
          exit-code: 0   # on ne bloque pas ici, juste summary
          output: trivy-fs.txt

      - name: üêç Bandit - Python security linter
        id: bandit
        uses: tj-actions/bandit@v6
        with:
          path: backend/
          output: bandit-result.txt

      - name: üîé Flake8 - Python linter
        id: flake8
        uses: py-actions/flake8@v2
        with:
          path: backend/
          output: flake8-report.txt

      # G√©n√©rer un r√©sum√© (summary) avec un script JS GitHub Actions
      - name: üìù Generate summary report
        id: summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let trivy = fs.existsSync('trivy-fs.txt') ? fs.readFileSync('trivy-fs.txt', 'utf-8') : '';
            let bandit = fs.existsSync('bandit-result.txt') ? fs.readFileSync('bandit-result.txt', 'utf-8') : '';
            let flake8 = fs.existsSync('flake8-report.txt') ? fs.readFileSync('flake8-report.txt', 'utf-8') : '';
            let summary = "## R√©sum√© s√©curit√© & qualit√©\n";
            summary += "### Trivy (FS)\n" + (trivy || "Aucun r√©sultat") + "\n";
            summary += "### Bandit\n" + (bandit || "Aucun r√©sultat") + "\n";
            summary += "### Flake8\n" + (flake8 || "Aucun r√©sultat") + "\n";
            core.setOutput('summary', summary);
            core.summary.addRaw(summary).write();

  test:
    name: üß™ Pytest (unit tests)
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
      - name: Run pytest
        run: |
          pytest backend/tests || true   # Ne bloque pas, juste pour reporting
      - name: Upload pytest results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: backend/tests/

  build_scan_push:
    name: üöÄ Build, Scan & Push Docker Images
    runs-on: ubuntu-latest
    needs: [security, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # BACKEND IMAGE
      - name: Build backend image
        run: docker build -t cedricteyc/littlepigs-backend:${{ github.sha }} -t cedricteyc/littlepigs-backend:latest ./backend

      - name: Trivy scan backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "cedricteyc/littlepigs-backend:${{ github.sha }}"
          format: sarif
          output: "trivy-backend.sarif"
          severity: CRITICAL,HIGH,MEDIUM

      - name: Upload backend scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-backend.sarif"

      - name: Push backend image
        run: docker push cedricteyc/littlepigs-backend:${{ github.sha }} && docker push cedricteyc/littlepigs-backend:latest

      # FRONTEND IMAGE
      - name: Build frontend image
        run: docker build -t cedricteyc/littlepigs-frontend:${{ github.sha }} -t cedricteyc/littlepigs-frontend:latest ./frontend

      - name: Trivy scan frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "cedricteyc/littlepigs-frontend:${{ github.sha }}"
          format: sarif
          output: "trivy-frontend.sarif"
          severity: CRITICAL,HIGH,MEDIUM

      - name: Upload frontend scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-frontend.sarif"

      - name: Push frontend image
        run: docker push cedricteyc/littlepigs-frontend:${{ github.sha }} && docker push cedricteyc/littlepigs-frontend:latest

