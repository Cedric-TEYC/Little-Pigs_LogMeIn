name: DevSecOps Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  security_quality:
    name: Security & Quality (Trivy, Bandit, Flake8)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@main
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "table"
          severity: "CRITICAL,HIGH"

      - name: Bandit security scan (Python)
        uses: tj-actions/bandit@v5
        with:
          targets: "./backend"

      - name: Flake8 linter
        uses: py-actions/flake8@v2
        with:
          path: "./backend"

  pytest:
    name: Pytest (unit tests)
    runs-on: ubuntu-latest
    needs: security_quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install pytest
      - name: Run pytest
        run: pytest backend/tests || true  # Retire || true si tu veux que Ã§a bloque sur test fail

  build_docker:
    name: Build, Scan & Push Docker Images
    runs-on: ubuntu-latest
    needs: [pytest]
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build backend Docker image
        run: docker build -t $DOCKERHUB_USERNAME/littlepigs-backend:latest ./backend

      - name: Build frontend Docker image
        run: docker build -t $DOCKERHUB_USERNAME/littlepigs-frontend:latest ./frontend

      - name: Trivy scan backend Docker image
        uses: aquasecurity/trivy-action@main
        with:
          image-ref: "${{ env.DOCKERHUB_USERNAME }}/littlepigs-backend:latest"
          format: "sarif"
          output: "trivy-backend.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"

      - name: Trivy scan frontend Docker image
        uses: aquasecurity/trivy-action@main
        with:
          image-ref: "${{ env.DOCKERHUB_USERNAME }}/littlepigs-frontend:latest"
          format: "sarif"
          output: "trivy-frontend.sarif"
          severity: "CRITICAL,HIGH,MEDIUM"

      - name: Push backend image
        run: docker push $DOCKERHUB_USERNAME/littlepigs-backend:latest

      - name: Push frontend image
        run: docker push $DOCKERHUB_USERNAME/littlepigs-frontend:latest

      - name: Upload backend SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-backend.sarif"

      - name: Upload frontend SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-frontend.sarif"
