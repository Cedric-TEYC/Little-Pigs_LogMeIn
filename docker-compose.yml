version: "3.8"

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=logmeindb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager    # DB que sur le manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      update_config:
        failure_action: rollback
        order: start-first
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d $${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    stop_grace_period: 20s

  backend:
    image: cedricteyc/littlepigs-backend:latest
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=logmeindb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      update_config:
        failure_action: rollback
        order: start-first
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5000/api/stats >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 4s
      retries: 5
      start_period: 15s
    stop_grace_period: 15s

  frontend:
    image: cedricteyc/littlepigs-frontend:latest
    # Images basées sur nginx : besoin d'écriture sur /var/cache/nginx et /var/run
    read_only: false
    tmpfs:
      - /var/cache/nginx
      - /var/run
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      update_config:
        failure_action: rollback
        order: start-first
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 64M
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 4s
      retries: 5
      start_period: 10s
    stop_grace_period: 10s

  nginx:
    image: cedricteyc/littlepigs-nginx:latest
    depends_on:
      - frontend
      - backend
    # Swarm publie via le mesh ingress
    ports:
      - "3000:80"
    # Images basées sur nginx : idem
    read_only: false
    tmpfs:
      - /var/cache/nginx
      - /var/run
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      update_config:
        failure_action: rollback
        order: start-first
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 4s
      retries: 5
      start_period: 10s
    stop_grace_period: 10s

volumes:
  pgdata:
